package ${package}.${moduleName}.controller;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;


import cn.hutool.core.bean.BeanUtil;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import cn.lctele.common.annotation.RepeatSubmit;
import cn.lctele.common.core.domain.AjaxResult;
import ${package}.${moduleName}.domain.entity.${className}Entity;
import ${package}.${moduleName}.domain.vo.${className}Vo;
import ${package}.${moduleName}.service.${className}Service;

import org.springframework.security.access.prepost.PreAuthorize;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Api(value="${comments}", tags="${comments}")
@RestController
@RequestMapping("${moduleName}/${pathName}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @PreAuthorize("@ss.hasPermi('${moduleName}:${pathName}:list')")
    @ApiOperation(value="获取列表信息",httpMethod = "GET")
    @GetMapping("/pageList")
    public AjaxResult list( ${className}Entity ${classname}){
        Page<${className}Entity> page = new Page<>(${classname}.getCurrent(),${classname}.getSize());
        ${classname}Service.page(page);
        return AjaxResult.success(page);
    }

    @PreAuthorize("@ss.hasPermi('${moduleName}:${pathName}:list')")
    @ApiOperation(value="获取列表信息",httpMethod = "GET")
    @GetMapping("/pageList1")
    public AjaxResult pageList( ${className}Vo vo){
        Page<${className}Vo> page  = ${classname}Service.pageList(vo);
        return AjaxResult.success(page);
    }


    /**
     * 信息
     */
    @PreAuthorize("@ss.hasPermi('${moduleName}:${pathName}:info')")
    @ApiOperation(value="根据id获取信息",httpMethod = "GET")
    @GetMapping("/info/{${pk.attrname}}")
    public AjaxResult info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
		${className}Entity ${classname} = ${classname}Service.getById(${pk.attrname});

        return AjaxResult.success(${classname});
    }

    /**
     * 保存
     */
    @PreAuthorize("@ss.hasPermi('${moduleName}:${pathName}:save')")
    @RepeatSubmit
    @ApiOperation(value="保存信息",httpMethod = "POST")
    @PostMapping("/save")
    public AjaxResult save(@RequestBody ${className}Entity one){
        if(one.getId()!=null){
            return  AjaxResult.error("参数错误");
        }
		${classname}Service.save(one);
        return AjaxResult.success();
    }

    /**
     * 修改
     */
    @PreAuthorize("@ss.hasPermi('${moduleName}:${pathName}:update')")
    @RepeatSubmit
    @ApiOperation(value="修改信息",httpMethod = "POST")
    @PostMapping("/update")
    public AjaxResult update(@RequestBody ${className}Entity one){

        if(one.getId()==null){
            return  AjaxResult.error("参数错误");
        }

		${classname}Service.updateById(one);
        return AjaxResult.success();
    }

    /**
     * 删除
     */
    @PreAuthorize("@ss.hasPermi('${moduleName}:${pathName}:delete')")
    @RepeatSubmit
    @ApiOperation(value="删除信息",httpMethod = "POST")
    @PostMapping("/delete")
    public AjaxResult delete(@RequestBody ${className}Vo vo){
        if(vo.getId()==null){
            return  AjaxResult.error("参数错误");
        }

		${classname}Service.removeById(vo.getId());
        return AjaxResult.success();
    }

    @PreAuthorize("@ss.hasPermi('${moduleName}:${pathName}:delete')")
    @RepeatSubmit
    @ApiOperation(value="删除信息",httpMethod = "POST")
    @PostMapping("/deleteBatch")
    public AjaxResult deleteBatch(@RequestBody ${className}Vo vo){
        if(vo.getIds()==null||vo.getIds().size()==0){
            return  AjaxResult.error("参数错误");
        }
        ${classname}Service.removeByIds(vo.getIds());
        return AjaxResult.success();
    }

}
