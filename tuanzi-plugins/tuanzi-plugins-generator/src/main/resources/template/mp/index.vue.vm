<template>
  <div class="app-container">
    <el-form :model="dataForm" ref="dataForm" size="small" :inline="true" v-show="showSearch" label-width="68px">
      <el-form-item label="参数名" prop="searchStr">
        <el-input  v-model="dataForm.searchStr" placeholder="参数名" clearable style="width: 240px" />
      </el-form-item>
      <el-form-item>
        <el-button type="primary" icon="el-icon-search" size="mini" @click="queryList">查询</el-button>
        <el-button icon="el-icon-refresh" size="mini" @click="resetHandle">重置</el-button>
      </el-form-item>
    </el-form>

    <el-row :gutter="10" class="mb8">

      <el-col :span="1.5"> <el-button  type="primary" plain icon="el-icon-plus" size="mini" @click="addOrUpdateHandle()"  >新增</el-button> </el-col>
<!--      <el-col :span="1.5">  <el-button type="success" plain icon="el-icon-edit" size="mini" :disabled="single" @click="handleUpdate"  v-hasPermi="['system:dict:edit']" >修改</el-button> </el-col>-->
<!--      <el-col :span="1.5"> <el-button type="danger" plain  icon="el-icon-delete" size="mini" :disabled="dataListSelections.length <= 0" @click="deleteHandle" v-hasPermi="['system:dict:remove']" >删除</el-button> </el-col>-->
<!--      <el-col :span="1.5"> <el-button type="info" plain icon="el-icon-upload2" size="mini" @click="handleImport" v-hasPermi="['system:user:import']" >导入</el-button>  </el-col>-->
<!--      <el-col :span="1.5"> <el-button type="warning" plain icon="el-icon-download" size="mini" @click="handleExport" v-hasPermi="['system:dict:export']" >导出</el-button> </el-col>-->
      <right-toolbar :showSearch.sync="showSearch" @queryTable="queryList"></right-toolbar>
    </el-row>

    <el-table :data="dataList"  v-loading="dataListLoading"
        @selection-change="selectionChangeHandle"
        style="width: 100%;margin-top: 6px"  size="mini">
      <!--  <el-table-column type="selection" header-align="center" align="center" width="50"> </el-table-column>-->
#foreach($column in $columns)
#if($column.attrname !='ts'  && $column.attrname !='id' && $column.attrname !='remark' && $column.attrname !='createTime' && $column.attrname !='createBy' && $column.attrname !='updateBy' && $column.attrname !='delFlag')
      <el-table-column  header-align="center" align="center" prop="${column.attrname}" label="${column.comments}"> </el-table-column>
#end
#end
      <el-table-column fixed="right" header-align="center" align="center" width="150" label="操作">
        <template slot-scope="scope">
          <el-button type="text" size="small" @click="addOrUpdateHandle(scope.row.${pk.attrname})">修改</el-button>
          <el-button type="text" size="small"  @click="deleteHandle(scope.row.${pk.attrname})">删除</el-button>
        </template>
      </el-table-column>
    </el-table>
    <pagination
            v-show="totalPage>0"
            :total="totalPage"
            :page.sync="dataForm.current"
            :limit.sync="dataForm.size"
            @pagination="getDataList"
    />

    <!-- 弹窗, 新增 / 修改 -->
    <add-or-update v-if="addOrUpdateVisible" ref="addOrUpdate" @refreshDataList="getDataList"></add-or-update>
  </div>
</template>

<script>
  import AddOrUpdate from './${pathName}-aou'

  export default {
    data () {
      return {
        showSearch:true,
        dataForm: {
          current: 1,
          size: 10,
          searchStr: ''
        },
        dataList: [],
        totalPage: 0,
        dataListLoading: false,
        dataListSelections: [],
        addOrUpdateVisible: false
      }
    },
    components: {
      AddOrUpdate
    },
    mounted () {
      this.queryList()
    },
    methods: {
      // 重置
      resetHandle() {
        this.dataForm.searchStr = ''
        this.queryList()
      },
      // 查询
      queryList() {
        this.dataForm.current = 1
        this.getDataList()
      },
      // 获取数据列表
      getDataList () {
        this.dataListLoading = true
        this.$get("${moduleName}/${pathName}/pageList",this.dataForm)
            .then((data)=>{
              if (data && data.code == 200) {
                this.dataList = data.data.records
                this.totalPage = data.data.total
              } else {
                this.dataList = []
                this.totalPage = 0
              }
              this.dataListLoading = false
            }).catch((err)=>{
          this.dataList = []
          this.totalPage = 0
          this.dataListLoading = false
        })

      },
      // 多选
      selectionChangeHandle (val) {
        this.dataListSelections = val
      },
      // 新增 / 修改
      addOrUpdateHandle (id) {
        this.addOrUpdateVisible = true
        this.$nextTick(() => {
          this.$refs.addOrUpdate.init(id)
        })
      },
      // 删除
      deleteHandle (id) {
        let ids = id ? [id] : this.dataListSelections.map(item => {
          return item.${pk.attrname}
        })
        this.$confirm(`确定进行[#[[$]]#{id ? '删除' : '批量删除'}]操作?`, '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          this.$post("${moduleName}/${pathName}/deleteBatch",{ids:ids})
              .then((data) => {
                if (data && data.code === 200) {
                  this.$message.success("操作成功")
                  this.getDataList()
                } else {
                #[[this.$message.error(data.msg)]]#
                }
              })
        })
      }
    }
  }
</script>
